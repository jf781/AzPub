{
  "mode": "All",
  "policyRule": {
    "if": {
      "field": "type",
      "equals": "Microsoft.Sql/servers"
    },
    "then": {
      "effect": "[parameters('effect')]",
      "details": {
        "type": "Microsoft.Sql/servers/auditingSettings",
        "name": "default",
        "existenceCondition": {
          "allOf": [
            {
              "field": "Microsoft.Sql/auditingSettings.state",
              "equals": "[parameters('auditLoggingEnabled')]"
            }
          ]
        },
        "roleDefinitionIds": [
          "/providers/microsoft.authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
          "/providers/microsoft.authorization/roleDefinitions/f526a384-b230-433a-b45c-95f59c4a2dec"
        ],
        "deployment": {
          "properties": {
            "mode": "incremental",
            "template": {
              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {
                "location": {
                  "type": "string"
                },
                "serverName": {
                  "type": "string"
                },
                "profileName": {
                  "type": "string"
                },
                "auditLoggingEnabled": {
                  "type": "string"
                },
                "securityAuditLoggingEnabled":{
                  "type": "string"
                },
                "centralUsEventHubName": {
                  "type": "string"
                },
                "centralUsEventHubRuleId": {
                    "type": "string"
                },
                "eastUs2EventHubName": {
                    "type": "string"
                },
                "eastUs2EventHubRuleId": {
                    "type": "string"
                },
                "northCentralUsEventHubName": {
                    "type": "string"
                },
                "northCentralUSEventHubName": {
                    "type": "string"
                },
                "germanyWestCentralEventHubRuleId": {
                    "type": "string"
                },
                "germanyWestCentralEventHubName": {
                    "type": "string"
                },
                "northEuropeEventHubRuleId": {
                    "type": "string"
                },
                "northEuropeEventHubName": {
                    "type": "string"
                }
              },
              "variables": {
                "centralUsEventHub": {
                    "eventHubName": "[parameters('centralUsEventHubName')]",
                    "eventHubRuleId": "[parameters('centralUsEventHubRuleId')]"
                },
                "eastUs2EventHub": {
                    "eventHubName": "[parameters('eastUs2EventHubName')]",
                    "eventHubRuleId": "[parameters('eastUs2EventHubRuleId')]"
                },
                "northCentralUSEventHub": {
                    "eventHubName": "[parameters('northCentralUSEventHubName')]",
                    "eventHubRuleId": "[parameters('northCentralUSEventHubRuleId')]"
                },
                "germanyWestCentralEventHub": {
                    "eventHubName": "[parameters('germanyWestCentralEventHubName')]",
                    "eventHubRuleId": "[parameters('germanyWestCentralEventHubRuleId')]"
                },
                "northEuropeEventHub": {
                    "eventHubName": "[parameters('northEuropeEventHubName')]",
                    "eventHubRuleId": "[parameters('northEuropeEventHubRuleId')]"
                },
                "eventHub": "[variables(concat(parameters('location'), 'EventHub'))]"
              },
              "resources": [
                {
                  "type": "Microsoft.Sql/servers/databases/providers/diagnosticSettings",
                  "name": "[concat(parameters('serverName'), '/master/microsoft.insights/', parameters('profileName'))]",
                  "apiVersion": "2017-05-01-preview",
                  "properties": {
                    "name": "[parameters('profileName')]",
                    "eventHubName": "[variables('eventHub').eventHubName]",
                    "eventHubAuthorizationRuleId": "[variables('eventHub').eventHubRuleId]",
                    "logs": [
                      {
                        "category": "SQLSecurityAuditEvents",
                        "enabled": "[parameters('securityAuditLoggingEnabled')]"
                      }
                    ]
                  }
                },
                {
                  "apiVersion": "2017-03-01-preview",
                  "type": "Microsoft.Sql/servers/auditingSettings",
                  "name": "[concat(parameters('serverName'), '/DefaultAuditingSettings')]",
                  "properties": {
                    "State": "[parameters('auditLoggingEnabled')]",
                    "auditActionsAndGroups": null,
                    "isAzureMonitorTargetEnabled": true
                  }
                }
              ],
              "outputs": {
                "eventHubResource": {
                  "type": "string",
                  "value": "[concat('Configured diagnostic settings to be sent to EventHub ', variables('eventHub').eventHubName, 'for SQL server ', parameters('serverName'),'.')]"
                }
              }
            },
            "parameters": {
              "effect": {
                "value": "[parameters('effect')]"
              },
              "location": {
                "value": "[field('location')]"
              },
              "serverName": {
                "value": "[field('name')]"
              },
              "profileName": {
                "value": "[parameters('profileName')]"
              },
              "auditLoggingEnabled": {
                "value": "[parameters('auditLoggingEnabled')]"
              },
              "securityAuditLoggingEnabled":{
                "value": "[parameters('securityAuditLoggingEnabled')]"
              },
              "centralUsEventHubName": {
                "value": "[parameters('centralUsEventHub')]"
              },
              "centralUsEventHubRuleId": {
                  "value": "[parameters('centraUsEventHubRuleId')]"
              },
              "eastUs2EventHubName": {
                  "value": "[parameters('eastUs2EventHub')]"
              },
              "eastUs2EventHubRuleId": {
                  "value": "[parameters('eastUs2EventHubRuleId')]"
              },
              "northCentralUsEventHubName": {
                  "value": "[parameters('northCentralUsEventHub')]"
              },
              "northCentralUsEventHubRuleId": {
                  "value": "[parameters('northCentraUsEventHubRuleId')]"
              },
              "germanyWestCentralEventHubRuleId": {
                  "value": "[parameters('germanyWestCentralEventHubRuleId')]"
              },
              "germanyWestCentralEventHubName": {
                  "value": "[last(split(parameters('germanyWestCentralEventHub'),'/'))]"
              },
              "northEuropeEventHubRuleId": {
                  "value": "[parameters('northEuropeEventHubRuleId')]"
              },
              "northEuropeEventHubName": {
                  "value": "[last(split(parameters('northEuropeEventHub'),'/'))]"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "effect": {
      "type": "String",
      "metadata": {
        "displayName": "Effect",
        "description": "The effect determines what happens when the policy rule is evaluated to match"
      },
      "allowedValues": [
        "Audit",
        "Deny",
        "deployIfNotExists"
      ],
      "defaultValue": "Audit"
    },
    "profileName": {
      "type": "String",
      "metadata": {
        "displayName": "Profile name",
        "description": "The diagnostic settings profile name"
      },
      "defaultValue": "setByPolicy"
    },
    "securityAuditLoggingEnabled": {
      "type": "String",
      "metadata": {
        "displayName": "Enable Security Audit Logging ",
        "description": "Whether to enable SQL Security audit logs to the Event Hub"
      },
      "allowedValues": [
        "True",
        "False"
      ],
      "defaultValue": "True"
    },
    "auditLoggingEnabled": {
      "type": "String",
      "metadata": {
        "displayName": "Enable Audit Logging ",
        "description": "Whether to enable SQL logs to the Event Hub"
      },
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Enabled"
    },
    "centralUsEventHub": {
      "type": "string",
      "metadata": {
          "displayName": "Central US Event hub where data will be sent to",
          "strongType": "Microsoft.EventHub/Namespaces/EventHubs"
      }
    },
    "centraUsEventHubRuleId": {
        "type": "String",
        "metadata": {
            "displayName": "Central US Event Hub Authorization Rule Id",
            "description": "The Central Event Hub authorization rule Id for Azure Diagnostics. The authorization rule needs to be at Event Hub namespace level. e.g. /subscriptions/{subscription Id}/resourceGroups/{resource group}/providers/Microsoft.EventHub/namespaces/{Event Hub namespace}/authorizationrules/{authorization rule}",
            "strongType": "Microsoft.EventHub/Namespaces/AuthorizationRules",
            "assignPermissions": true
        }
    },
    "eastUs2EventHub": {
        "type": "string",
        "metadata": {
            "displayName": "East US 2 Event hub where data will be sent to",
            "strongType": "Microsoft.EventHub/Namespaces/EventHubs"
        }
    },
    "eastUs2EventHubRuleId": {
        "type": "String",
        "metadata": {
            "displayName": "East US 2 Event Hub Authorization Rule Id",
            "description": "The East US 2 Event Hub authorization rule Id for Azure Diagnostics. The authorization rule needs to be at Event Hub namespace level. e.g. /subscriptions/{subscription Id}/resourceGroups/{resource group}/providers/Microsoft.EventHub/namespaces/{Event Hub namespace}/authorizationrules/{authorization rule}",
            "strongType": "Microsoft.EventHub/Namespaces/AuthorizationRules",
            "assignPermissions": true
        }
    },
    "northCentralUsEventHub": {
        "type": "string",
        "metadata": {
            "displayName": "Central US Event hub where data will be sent to",
            "strongType": "Microsoft.EventHub/Namespaces/EventHubs"
        }
    },
    "northCentraUsEventHubRuleId": {
        "type": "String",
        "metadata": {
            "displayName": "North Central US Event Hub Authorization Rule Id",
            "description": "The North Central Event Hub authorization rule Id for Azure Diagnostics. The authorization rule needs to be at Event Hub namespace level. e.g. /subscriptions/{subscription Id}/resourceGroups/{resource group}/providers/Microsoft.EventHub/namespaces/{Event Hub namespace}/authorizationrules/{authorization rule}",
            "strongType": "Microsoft.EventHub/Namespaces/AuthorizationRules",
            "assignPermissions": true
        }
    },
    "germanyWestCentralEventHub": {
        "type": "string",
        "metadata": {
            "displayName": "Japan East Event hub where data will be sent to",
            "strongType": "Microsoft.EventHub/Namespaces/EventHubs"
        }
    },
    "germanyWestCentralEventHubRuleId": {
        "type": "String",
        "metadata": {
            "displayName": "Germany West Central Event Hub Authorization Rule Id",
            "description": "The Germany West Central Event Hub authorization rule Id for Azure Diagnostics. The authorization rule needs to be at Event Hub namespace level. e.g. /subscriptions/{subscription Id}/resourceGroups/{resource group}/providers/Microsoft.EventHub/namespaces/{Event Hub namespace}/authorizationrules/{authorization rule}",
            "strongType": "Microsoft.EventHub/Namespaces/AuthorizationRules",
            "assignPermissions": true
        }
    },
    "northEuropeEventHub": {
        "type": "string",
        "metadata": {
            "displayName": "North Europe Event hub where data will be sent to",
            "strongType": "Microsoft.EventHub/Namespaces/EventHubs"
        }
    },
    "northEuropeEventHubRuleId": {
        "type": "String",
        "metadata": {
            "displayName": "North Europe Event Hub Authorization Rule Id",
            "description": "The North Europe Event Hub authorization rule Id for Azure Diagnostics. The authorization rule needs to be at Event Hub namespace level. e.g. /subscriptions/{subscription Id}/resourceGroups/{resource group}/providers/Microsoft.EventHub/namespaces/{Event Hub namespace}/authorizationrules/{authorization rule}",
            "strongType": "Microsoft.EventHub/Namespaces/AuthorizationRules",
            "assignPermissions": true
        }
    }
  }
}